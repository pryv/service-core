<% if (vars.daemon === false) { %>
daemon            off;
<% } %>

<% if (vars.nginxUser) { %>
user              <%= vars.nginxUser %>;
<% } %>

pid               <%= vars.pidFile %>;
worker_processes  <%= vars.workerProcesses %>;
error_log         <%= vars.errorLog %>;

events {
  worker_connections <%= vars.workerConnections %>;
  # multi_accept on;
}

http {
  # BASE SETTINGS

  types_hash_max_size 2048;
  server_names_hash_bucket_size 64;
  #include             /etc/nginx/mime.types;

  access_log          <%= vars.accessLog %>;

  sendfile            on;
  #tcp_nopush         on;

  #keepalive_timeout  0;
  keepalive_timeout   65;
  tcp_nodelay         on;

  gzip                on;
  gzip_http_version   1.1;
  gzip_vary           on;
  gzip_comp_level     6;
  gzip_proxied        any;
  gzip_types          text/plain text/html text/css application/json application/x-javascript text/xml application/xml application/xml+rss text/javascript application/javascript text/x-js;
  gzip_buffers        16 8k;
  gzip_disable        "MSIE [1-6]\.(?!.*SV1)";


  # PROXYING SETTINGS

  # upstream server groups

  upstream api_servers {
    server 127.0.0.1:<%= vars.api.port %>;
  }

  upstream previews_servers {
    server 127.0.0.1:<%= vars.previews.port %>;
  }

  upstream api_servers_legacy {
    server 127.0.0.1:<%= vars.api.port %>;
  }

  upstream previews_servers_legacy {
    server 127.0.0.1:<%= vars.previews.port %>;
  }

  # routes

  server {
    listen               <%= vars.port %>;
    server_name          <%= vars.serverName %>;

    <% if (vars.ssl.enabled) { %>
    ssl                  on;
    ssl_crl              <%= vars.ssl.caFile %>;
    ssl_certificate      <%= vars.ssl.certFile %>;
    ssl_certificate_key  <%= vars.ssl.keyFile %>;
    <% } %>

    keepalive_timeout    70;
    client_max_body_size 20M;

    location /api {
      rewrite           ^/api/?(.*) /$1 break;
      proxy_pass        http://api_servers;

      proxy_set_header  X-Real-IP  $remote_addr;
      proxy_set_header  X-Forwarded-For $proxy_add_x_forwarded_for;
      proxy_set_header  Host $http_host;
      proxy_set_header  X-Forwarded-Proto https;
      proxy_redirect    off;

      # enable websocket support
      proxy_http_version  1.1;
      proxy_set_header    Upgrade $http_upgrade;
      proxy_set_header    Connection "upgrade";
    }

    location /previews {
      rewrite           ^/previews/?(.*) /$1 break;
      proxy_pass        http://previews_servers;

      proxy_set_header  X-Real-IP  $remote_addr;
      proxy_set_header  X-Forwarded-For $proxy_add_x_forwarded_for;
      proxy_set_header  Host $http_host;
      proxy_set_header  X-Forwarded-Proto https;
      proxy_redirect    off;

      # enable websocket support
      proxy_http_version  1.1;
      proxy_set_header    Upgrade $http_upgrade;
      proxy_set_header    Connection "upgrade";
    }

    location / {
      root        <%= vars.static.root %>;
    }
  }



  server {
    listen               <%= vars.port %>;
    server_name          <%= vars.serverNameLegacy %>;

    <% if (vars.ssl.enabled) { %>
    ssl                  on;
    ssl_crl              <%= vars.ssl.caFile %>;
    ssl_certificate      <%= vars.ssl.certFile %>;
    ssl_certificate_key  <%= vars.ssl.keyFile %>;
    <% } %>

    keepalive_timeout    70;
    client_max_body_size 20M;

    location /api {
      rewrite           ^/api/?(.*) /$1 break;
      proxy_pass        http://api_servers_legacy;

      proxy_set_header  X-Real-IP  $remote_addr;
      proxy_set_header  X-Forwarded-For $proxy_add_x_forwarded_for;
      proxy_set_header  Host $http_host;
      proxy_set_header  X-Forwarded-Proto https;
      proxy_redirect    off;

      # enable websocket support
      proxy_http_version  1.1;
      proxy_set_header    Upgrade $http_upgrade;
      proxy_set_header    Connection "upgrade";
    }

    location /previews {
      rewrite           ^/previews/?(.*) /$1 break;
      proxy_pass        http://previews_servers_legacy;

      proxy_set_header  X-Real-IP  $remote_addr;
      proxy_set_header  X-Forwarded-For $proxy_add_x_forwarded_for;
      proxy_set_header  Host $http_host;
      proxy_set_header  X-Forwarded-Proto https;
      proxy_redirect    off;

      # enable websocket support
      proxy_http_version  1.1;
      proxy_set_header    Upgrade $http_upgrade;
      proxy_set_header    Connection "upgrade";
    }

    location / {
      root        <%= vars.static.root %>;
    }
  }


  # OTHER SETTINGS

  server_tokens off;
}
