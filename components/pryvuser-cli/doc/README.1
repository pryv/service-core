.\" generated with Ronn/v0.7.3
.\" http://github.com/rtomayko/ronn/tree/0.7.3
.
.TH "PRYV\-CLI" "1" "November 2018" "" ""
.
.SH "NAME"
\fBpryv\-cli\fR \- manages user accounts on a Pryv\.IO \'core\' machine\.
.
.SH "SYNOPSIS"
.
.nf

# Provides subcommand overview and help
$ bin/cli \-h

# Deletes the user \'jsmith\' on the current machine\.
$ bin/cli delete\-user jsmith
.
.fi
.
.SH "DESCRIPTION"
.
.SS "Setup"
\fBpryv\-cli\fR is meant to run on a Pryv\.IO \'core\' machine\. We\'ll assume that your installation is based on docker and runs \- among other things \- a \'mongodb\' and a \'influxdb\' instance\.
.
.P
The \'core\' machine should also have a configuration directory where all Pryv\.IO configuration files reside\. The following instructions assume that these files are located below a PRYVIO_BASE_DIR\.
.
.P
Run this command to find the backend network bridge for the Pryv\.IO installation:
.
.IP "" 4
.
.nf

$ docker network ls
.
.fi
.
.IP "" 0
.
.P
This will list a few networks; the network you\'re looking for combines the name for your installation with the postfix \'\fB_backend\fR\'\. We refer to this network as NETWORK in the following instructions\.
.
.P
We further assume that you hold a valid Pryv\.IO license and that you\'re authorised to operate on the machine\. Some operations \- especially deleting users \- are permanent\. Please exercise proper care\.
.
.P
The easiest way to run \fBpryv\-cli\fR is through a docker container\. To make this easier in day to day life, here\'s a useful shell alias:
.
.IP "" 4
.
.nf

$ alias pryv\-cli=\'docker run \-\-read\-only \e
  \-v ${PRYVIO_BASE_DIR}:/app/conf/:ro \e
  \-v ${PRYVIO_BASE_DIR}/conf/core/data/:/app/data/ \e
  \-\-network ${NETWORK} \-ti \e
  pryvsa\-docker\-release\.bintray\.io/pryv/cli:1\.3\.35 $*\'
.
.fi
.
.IP "" 0
.
.P
With this, you can invoke \fBpryv\-cli\fR like so:
.
.IP "" 4
.
.nf

$ pryv\-cli \-h
.
.fi
.
.IP "" 0
.
.P
The first time you run it, it will download the docker image from the distribution platform; time to grab a coffee! All subsequent runs will be instant\.
.
.SS "Delete User"
.
.nf

$ bin/cli delete\-user [options] USERNAME
.
.fi
.
.P
Deletes user identified by his username\. This will only work for a user that has his/her data on the current machine\.
.
.P
As a first stage \fBpryv\-cli\fR performs a preflight check\. During this phase, it tries to reach all relevant backends; if one of them is not reachable, the deletion fails\. After preflight you\'re asked to confirm user deletion\.
.
.P
If you say yes at this prompt, the user\'s data will be \fBIRREVOCABLY GONE\fR\.
.
.P
Valid options are:
.
.TP
\fB\-n\fR, \fB\-\-no\-interaction\fR
In normal operation, the tool will ask for confirmation of the username before starting the actual deletion\. This flag turns off the confirmation, allowing to run the script as part of a bigger automated procedure\.
.
.SH "RETURN VALUES"
.
.SS "Delete User"
If deletion fails, an error message is printed and the process exits with code 3\. Code 2 indicates that the user aborted by saying \'no\' at the confirmation prompt\. Code 1 indicates that the preflight check has failed\.
.
.P
When the configuration of the \'core\' machine cannot be located, the process terminates with code 4\.
.
.SH "BUGS"
If you find a strange behaviour or a bug in \fBpryv\-cli\fR, please send an email describing the issue to support@pryv\.com\.
.
.SH "COPYRIGHT"
Copyright 2013\-2018, Pryv SA\. All rights reserved\.
