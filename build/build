#!/usr/bin/env bash

set -e

# Builds 'service-core' docker image with the version given below. 

# Determine the build_tag and whether we need to release.
scripts/build_name

version=$(cat build_tag)
if [ -e release_build ]; then
  echo "This is a release build, it will update 'latest' tags."
fi

# Create a release.tar that contains all the code. 
pushd ..
tar cf build/release.tar \
  --exclude .git \
  --exclude node_modules \
  --exclude */node_modules \
  --exclude build \
  .
popd

echo "---------------------------- building service-core ----------------------"
pushd service-core
cp ../release.tar .
sudo docker build -f Dockerfile -t pryv/service-core:$version .
if [ -e ../release_build ]; then
  sudo docker tag pryv/service-core:$version pryv/service-core:latest
fi
popd

echo "---------------------------- building core ------------------------------"
pushd core
cp ../release.tar .
sudo docker build -f Dockerfile -t pryv/core:$version .
if [ -e ../release_build ]; then
  sudo docker tag pryv/core:$version pryv/core:latest
fi
popd

echo "---------------------------- building preview ---------------------------"
pushd preview
cp ../release.tar .
sudo docker build -f Dockerfile -t pryv/preview:$version .
if [ -e ../release_build ]; then
  sudo docker tag pryv/preview:$version pryv/preview:latest
fi
popd

