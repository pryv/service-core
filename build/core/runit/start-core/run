#!/bin/bash
set -e

########################################
# Sets up and starts the core service(s)
########################################

service_dir=/etc/service
start_dir=$service_dir/start-core
child_services_dir=$start_dir/child_services

# First remove any previously existing core service(s)
rm -Rf $service_dir/core_*
rm -Rf $child_services_dir

# Set $num_procs to 2 or the value of $NUM_PROCS if set
if [ -z ${NUM_PROCS+x} ]
then
	num_procs=2
else
	num_procs=$NUM_PROCS
fi

# Set $starting_port to 3000 or the value of $STARTING_PORT if set
if [ -z ${STARTING_PORT+x} ]
then
	starting_port=3000
else
	starting_port=$STARTING_PORT
fi

export NODE_ENV=production
export NODE_PATH=/app/bin/

# Wait for NATS service to be up
while ! nc -z 127.0.0.1 4222 ;
do
	echo "NATS service is not ready; waiting 2 seconds..."
	sleep 2
done

# Run Migartion checks before really starting the services
pushd ${NODE_PATH}components/api-server
chpst -u app ./bin/migrate --config /app/conf/core.yml
popd



# recreate $child_services_dir (deleted previously in cleaning)
mkdir -p $child_services_dir

# Add core service(s) for runit to start
for i in $( seq 1 $num_procs )
do
	# setup core service dir in $child_services_dir
	core_dir=$child_services_dir/core_$i
	port=$((starting_port + i - 1))
	cp -R $start_dir/core_n $core_dir
	# replace port number with current port in the duplicated script
	sed -i "s/\${PORT_NUM}/$port/g" $core_dir/run
	# finally symlink to tell runit about it
	ln -s $core_dir $service_dir/core_$i
done

# Job done, now wait until shutdown
while :; do sleep infinity; done
